name: Issue Automations
on:
  issues:
    types: [opened]

permissions:
  issues: write

jobs:
  on-new-issue:
    runs-on: ubuntu-latest
    steps:
      # 2A: Auto-comment
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "ðŸ‘‹ Thanks for opening this issue!"
            });

      # 2B: Auto-label bug (case-insensitive)
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = (context.payload.issue.title || "").toLowerCase();
            const body  = (context.payload.issue.body  || "").toLowerCase();
            if (title.includes("bug") || body.includes("bug")) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ["bug"]
              });
            }

      # 2C: Assign default owner
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        # Replace with your real GitHub username
          script: |
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: ["YOUR_GITHUB_USERNAME"]
            });

      # 2D: Close duplicates (title contains "[duplicate]" in any case)
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = (context.payload.issue.title || "").toLowerCase();
            if (title.includes("[duplicate]")) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: "ðŸ”’ Closing as duplicate. Please continue discussion on the original issue."
              });
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                state: "closed"
              });
            }
